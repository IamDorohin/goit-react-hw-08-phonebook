{"version":3,"file":"static/js/393.71bf34ff.chunk.js","mappings":"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","sources":["components/CommonFormButtons/CommonFormButtons.styled.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/PagesName/PagesName.styled.jsx","components/RegistrationComponent/RegistrationComponent.styled.jsx","components/RegistrationComponent/RegistrationComponent.jsx","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 200px;\n\n  @media screen and (min-width: 480px) {\n    width: 250px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const BlueButton = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  text-align: center;\n  width: 60px;\n  height: 20px;\n  cursor: pointer;\n\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.blueMain};\n  color: ${p => p.theme.colors.blueMain};\n\n  background-color: transparent;\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  @media screen and (min-width: 480px) {\n    width: 80px;\n    height: 25px;\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 30px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.blueHovered};\n    border-color: ${p => p.theme.colors.blueHovered};\n  }\n`;\n\nexport const GreenButton = styled.button`\n  width: 60px;\n  height: 20px;\n  cursor: pointer;\n\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.greenMain};\n\n  color: ${p => p.theme.colors.greenMain};\n  background-color: transparent;\n\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  @media screen and (min-width: 480px) {\n    width: 80px;\n    height: 25px;\n\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 30px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.greenHovered};\n    color: ${p => p.theme.colors.greenHovered};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  display: flex;\n  bottom: -15px;\n  right: 0;\n  margin: 0;\n  width: 200px;\n  height: 13px;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${p => p.theme.radii.normal};\n  font-size: ${p => p.theme.fontSizes.xxs};\n  background-color: ${p => p.theme.colors.redMain};\n  color: ${p => p.theme.colors.white};\n\n  @media screen and (min-width: 480px) {\n    bottom: -17px;\n    width: 250px;\n    height: 15px;\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    bottom: -22px;\n    width: 350px;\n    height: 20px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PageName = styled.div`\n  position: absolute;\n  left: 50%;\n  top: -30px;\n  transform: translateX(-50%);\n\n  padding-right: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n\n  border-right: ${p => p.theme.borders.normal};\n  border-left: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.white};\n\n  color: ${p => p.theme.colors.blueHovered};\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  @media screen and (min-width: 480px) {\n    top: -33px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    top: -35px;\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const RegistrationMain = styled.main``;\nexport const RegistrationSection = styled.section``;\nexport const RegistrationContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: ${p => p.theme.space[6]}px;\n  padding-right: ${p => p.theme.space[5]}px;\n  padding-left: ${p => p.theme.space[5]}px;\n\n  background-color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 480px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 568px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 900px;\n  }\n`;\n\nexport const RegistrationForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const RegistrationLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  color: ${p => p.theme.colors.white};\n  margin-bottom: ${p => p.theme.space[4]}px;\n\n  &:nth-child(3) {\n    margin-bottom: 25px;\n  }\n\n  @media screen and (min-width: 480px) {\n    margin-bottom: 23px;\n\n    &:nth-child(3) {\n      margin-bottom: 30px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const RegistrationLabelName = styled.span`\n  font-size: ${p => p.theme.fontSizes.xxs};\n  margin-bottom: ${p => p.theme.space[2]}px;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const RegistrationInput = styled(Field)`\n  border-radius: ${p => p.theme.radii.normal};\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  width: 200px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  height: 15px;\n\n  @media screen and (min-width: 480px) {\n    width: 250px;\n    height: 20px;\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    height: 30px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n`;\n","import React from 'react';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport {\n  ButtonContainer,\n  BlueButton,\n  GreenButton,\n} from 'components/CommonFormButtons/CommonFormButtons.styled';\nimport { ErrorText } from 'components/ErrorMessage/ErrorMessage.styled';\nimport { PageName } from 'components/PagesName/PagesName.styled';\nimport {\n  RegistrationMain,\n  RegistrationSection,\n  RegistrationContainer,\n  RegistrationForm,\n  RegistrationLabel,\n  RegistrationLabelName,\n  RegistrationInput,\n} from './RegistrationComponent.styled';\n\nconst validationSchema = yup.object().shape({\n  nickname: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().min(7).max(30).required(),\n});\n\nconst initialValues = {\n  nickname: '',\n  email: '',\n  password: '',\n};\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const RegistrationComponent = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const enteredData = values;\n\n    dispatch(\n      register({\n        name: enteredData.nickname,\n        email: enteredData.email,\n        password: enteredData.password,\n      })\n    );\n    resetForm();\n  };\n\n  return (\n    <RegistrationMain>\n      <RegistrationSection>\n        <RegistrationContainer>\n          <PageName>Sign up</PageName>\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={handleSubmit}\n          >\n            <RegistrationForm>\n              <RegistrationLabel htmlFor=\"nickname\">\n                <RegistrationLabelName>Nickname</RegistrationLabelName>\n                <FormError name=\"nickname\" />\n\n                <RegistrationInput type=\"text\" name=\"nickname\" />\n              </RegistrationLabel>\n              <RegistrationLabel htmlFor=\"email\">\n                <FormError name=\"email\" />\n\n                <RegistrationLabelName>Email</RegistrationLabelName>\n                <RegistrationInput type=\"email\" name=\"email\" />\n              </RegistrationLabel>\n              <RegistrationLabel htmlFor=\"password\">\n                <FormError name=\"password\" />\n\n                <RegistrationLabelName>Password</RegistrationLabelName>\n                <RegistrationInput type=\"password\" name=\"password\" />\n              </RegistrationLabel>\n              <ButtonContainer>\n                <BlueButton to=\"/\">Home</BlueButton>\n                <GreenButton type=\"submit\">Sign up</GreenButton>\n              </ButtonContainer>\n            </RegistrationForm>\n          </Formik>\n        </RegistrationContainer>\n      </RegistrationSection>\n    </RegistrationMain>\n  );\n};\n","import { RegistrationComponent } from 'components/RegistrationComponent/RegistrationComponent';\n\nconst RegistrationPage = () => {\n  return <RegistrationComponent />;\n};\n\nexport default RegistrationPage;\n"],"names":["ButtonContainer","styled","BlueButton","NavLink","p","theme","borders","normal","radii","colors","blueMain","fontSizes","xxs","xs","s","blueHovered","GreenButton","greenMain","greenHovered","ErrorText","redMain","white","PageName","space","fontWeights","bold","m","RegistrationMain","RegistrationSection","RegistrationContainer","black","RegistrationForm","Form","RegistrationLabel","RegistrationLabelName","RegistrationInput","Field","validationSchema","yup","shape","nickname","required","email","password","min","max","initialValues","FormError","name","render","message","RegistrationComponent","dispatch","useDispatch","onSubmit","values","resetForm","enteredData","register","htmlFor","type","to"],"sourceRoot":""}