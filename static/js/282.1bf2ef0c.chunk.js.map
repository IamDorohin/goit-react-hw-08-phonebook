{"version":3,"file":"static/js/282.1bf2ef0c.chunk.js","mappings":"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","sources":["components/CommonFormButtons/CommonFormButtons.styled.jsx","components/ErrorMessage/ErrorMessage.styled.jsx","components/PagesName/PagesName.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","pages/AddContactPage/AddContactPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 200px;\n\n  @media screen and (min-width: 480px) {\n    width: 250px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const BlueButton = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  text-align: center;\n  width: 60px;\n  height: 20px;\n  cursor: pointer;\n\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.blueMain};\n  color: ${p => p.theme.colors.blueMain};\n\n  background-color: transparent;\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  @media screen and (min-width: 480px) {\n    width: 80px;\n    height: 25px;\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 30px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.blueHovered};\n    border-color: ${p => p.theme.colors.blueHovered};\n  }\n`;\n\nexport const GreenButton = styled.button`\n  width: 60px;\n  height: 20px;\n  cursor: pointer;\n\n  border: ${p => p.theme.borders.normal};\n  border-radius: ${p => p.theme.radii.normal};\n  border-color: ${p => p.theme.colors.greenMain};\n\n  color: ${p => p.theme.colors.greenMain};\n  background-color: transparent;\n\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  @media screen and (min-width: 480px) {\n    width: 80px;\n    height: 25px;\n\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 100px;\n    height: 30px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n\n  &:hover,\n  &:focus {\n    border-color: ${p => p.theme.colors.greenHovered};\n    color: ${p => p.theme.colors.greenHovered};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  position: absolute;\n  display: flex;\n  bottom: -15px;\n  right: 0;\n  margin: 0;\n  width: 200px;\n  height: 13px;\n  align-items: center;\n  justify-content: center;\n  border-radius: ${p => p.theme.radii.normal};\n  font-size: ${p => p.theme.fontSizes.xxs};\n  background-color: ${p => p.theme.colors.redMain};\n  color: ${p => p.theme.colors.white};\n\n  @media screen and (min-width: 480px) {\n    bottom: -17px;\n    width: 250px;\n    height: 15px;\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    bottom: -22px;\n    width: 350px;\n    height: 20px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n`;\n","import styled from 'styled-components';\n\nexport const PageName = styled.div`\n  position: absolute;\n  left: 50%;\n  top: -30px;\n  transform: translateX(-50%);\n\n  padding-right: ${p => p.theme.space[3]}px;\n  padding-left: ${p => p.theme.space[3]}px;\n\n  border-right: ${p => p.theme.borders.normal};\n  border-left: ${p => p.theme.borders.normal};\n  border-color: ${p => p.theme.colors.white};\n\n  color: ${p => p.theme.colors.blueHovered};\n  font-size: ${p => p.theme.fontSizes.xs};\n  font-weight: ${p => p.theme.fontWeights.bold};\n\n  @media screen and (min-width: 480px) {\n    top: -33px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-right: ${p => p.theme.space[4]}px;\n    padding-left: ${p => p.theme.space[4]}px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    top: -35px;\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormSection = styled.section``;\nexport const FormContainer = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  margin-left: auto;\n  margin-right: auto;\n  padding-top: ${p => p.theme.space[6]}px;\n  padding-right: ${p => p.theme.space[4]}px;\n  padding-left: ${p => p.theme.space[4]}px;\n\n  background-color: ${p => p.theme.colors.black};\n\n  @media screen and (min-width: 480px) {\n    width: 380px;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 568px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 900px;\n  }\n`;\nexport const AddContactForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n  color: ${p => p.theme.colors.white};\n\n  margin-bottom: ${p => p.theme.space[4]}px;\n\n  &:nth-child(2) {\n    margin-bottom: 25px;\n  }\n\n  @media screen and (min-width: 480px) {\n    margin-bottom: 23px;\n\n    &:nth-child(2) {\n      margin-bottom: 30px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const FormLabelName = styled.span`\n  font-size: ${p => p.theme.fontSizes.xxs};\n  margin-bottom: ${p => p.theme.space[1]}px;\n\n  @media screen and (min-width: 480px) {\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n`;\n\nexport const FormInput = styled(Field)`\n  border-radius: ${p => p.theme.radii.normal};\n  font-size: ${p => p.theme.fontSizes.xxs};\n\n  width: 200px;\n  border: 1px solid rgba(0, 0, 0, 0.1);\n  height: 15px;\n\n  @media screen and (min-width: 480px) {\n    width: 250px;\n    height: 20px;\n    font-size: ${p => p.theme.fontSizes.xs};\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n    height: 30px;\n    font-size: ${p => p.theme.fontSizes.s};\n  }\n\n  @media screen and (min-width: 1200px) {\n  }\n\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Formik, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\nimport { addContact } from 'redux/contacts/operations';\nimport { PageName } from 'components/PagesName/PagesName.styled';\nimport {\n  ButtonContainer,\n  BlueButton,\n  GreenButton,\n} from 'components/CommonFormButtons/CommonFormButtons.styled';\nimport { ErrorText } from 'components/ErrorMessage/ErrorMessage.styled';\nimport {\n  FormSection,\n  FormContainer,\n  AddContactForm,\n  FormLabel,\n  FormLabelName,\n  FormInput,\n} from 'components/ContactForm/ContactForm.styled';\n\nconst phoneNumberValidationPattern =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup\n    .string()\n    .min(13)\n    .matches(phoneNumberValidationPattern, 'Phone number is not valid')\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst FormError = ({ name }) => {\n  return (\n    <ErrorMessage\n      name={name}\n      render={message => <ErrorText>{message}</ErrorText>}\n    />\n  );\n};\n\nexport const ContactForm = () => {\n  const contactsArray = useSelector(state => state.contacts.items);\n\n  const dispatch = useDispatch();\n\n  const pushContactNameHandler = (values, { resetForm }) => {\n    const enteredData = values;\n\n    if (contactsArray.find(contact => contact.name === enteredData.name)) {\n      alert('There is already a subscriber with this name in the phone book!');\n      return;\n    }\n    dispatch(\n      addContact({ name: enteredData.name, number: enteredData.number })\n    );\n    resetForm();\n  };\n\n  return (\n    <FormSection>\n      <FormContainer>\n        <PageName>Add contact</PageName>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={pushContactNameHandler}\n        >\n          <AddContactForm>\n            <FormLabel htmlFor=\"name\">\n              <FormLabelName>Contact name</FormLabelName>\n              <FormError name=\"name\" />\n              <FormInput type=\"text\" name=\"name\" />\n            </FormLabel>\n            <FormLabel htmlFor=\"number\">\n              <FormLabelName>Contact phone number</FormLabelName>\n              <FormError name=\"number\" />\n\n              <FormInput type=\"tel\" name=\"number\" />\n            </FormLabel>\n            <ButtonContainer>\n              <BlueButton type=\"button\" to=\"/contacts\">\n                Contacts list\n              </BlueButton>\n              <GreenButton type=\"submit\">Add contact</GreenButton>\n            </ButtonContainer>\n          </AddContactForm>\n        </Formik>\n      </FormContainer>\n    </FormSection>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst AddContactPage = () => {\n  return <ContactForm />;\n};\n\nexport default AddContactPage;\n"],"names":["ButtonContainer","styled","BlueButton","NavLink","p","theme","borders","normal","radii","colors","blueMain","fontSizes","xxs","xs","s","blueHovered","GreenButton","greenMain","greenHovered","ErrorText","redMain","white","PageName","space","fontWeights","bold","m","FormSection","FormContainer","black","AddContactForm","Form","FormLabel","FormLabelName","FormInput","Field","validationSchema","yup","shape","name","required","number","min","matches","initialValues","FormError","render","message","ContactForm","contactsArray","useSelector","state","contacts","items","dispatch","useDispatch","onSubmit","values","resetForm","enteredData","find","contact","alert","addContact","htmlFor","type","to"],"sourceRoot":""}